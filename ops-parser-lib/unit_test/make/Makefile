# A sample Makefile for building both Google Mock and Google Test and
# using them in user tests.  This file is self-contained, so you don't
# need to use the Makefile in Google Test's source tree.  Please tweak
# it to suit your environment and project.  You may want to move it to
# your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GMOCK_HEADERS and GTEST_HEADERS, which you can use
# in your own targets but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file, or if you want to use
# a copy of Google Test at a different location.
GTEST_DIR = ../../target/googletest-release-1.6.0

# Points to the root of Google Mock, relative to where this file is.
# Remember to tweak this if you move this file.

GMOCK_DIR = ../../target/googlemock-release-1.6.0
GRPC_DIR = /usr/local/

# Where to find user code.
USER_DIR = ../src
LIB_DIR = ../../../ops-parser-lib
PARSER_DIR = ../../../ops-enm-parser/target/main/obj
PARSER_DIR1 = ../../../ops-enm-parser
TARGET_DIR = $(LIB_DIR)/target/main/obj
OPS_LIB = -I$(LIB_DIR)/src/main/cpp/ttcb -I$(LIB_DIR)/src/main/cpp/sched -I$(LIB_DIR)/src/main/cpp/cmd -I$(LIB_DIR)/src/main/cpp/common -I$(LIB_DIR)/src/main/cpp/route -I$(LIB_DIR)/src/main/cpp/subsc

PP_INCLUDES = -I/tmp/RW2021_LIBS/ -I$(GRPC_DIR) -I$(GRPC_DIR)/include -I$(GRPC_DIR)/lib -I$(GRPC_DIR)/include/proto -I$(LIB_DIR)/target/visibroker  -I$(LIB_DIR)/target/visibroker/lib -I$(LIB_DIR)/target/visibroker/include -I$(LIB_DIR)/target/visibroker/include/stubs -I$(LIB_DIR)/target/boost/include

OPS_PARSER = -I$(PARSER_DIR1)/src/main/cpp/parse  -I$(PARSER_DIR1)/src/main/cpp/cri -I$(PARSER_DIR1)/src/main/cpp/iow -I$(PARSER_DIR1)/src/main/cpp/ui -I$(PARSER_DIR1)/src/main/cpp/servermain -I$(PARSER_DIR1)/target/ops_server/src

LKFLAGS = -L$(GRPC_DIR)/libs/ -L$(GRPC_DIR)/include/proto -L/tmp/RW2021_LIBS/lib -L$(GRPC_DIR)/ -L$(GRPC_DIR)/include -L$(LIB_DIR)/target/visibroker  -L$(LIB_DIR)/target/visibroker/lib -L$(LIB_DIR)/target/visibroker/include -L$(LIB_DIR)/target/visibroker/include/stubs -L$(LIB_DIR)/target/boost/lib/ -Wl,-rpath-link=$(LIB_DIR)/target/visibroker/lib -Wl,-rpath-link=$(GRPC_DIR)/libs -Wl,-rpath-link=$(LIB_DIR)/target/boost/lib -L$(PARSER_DIR1)/target/ops_server

LIBS = -lgrpc -lgrpc++ -lgrpc++_reflection -lprotobuf -ltls21012d-gmsd -lnsl -lits_support64 -lvport64_r -lvdlog64_r -lorb64_r -ldl -lpthread -lcrypt -lcosnm64_r -lgrpc -lgrpc++ -lgrpc++_reflection -lprotobuf -lwinfiol -lboost_log_setup -lboost_log -lboost_thread -lboost_system -lboost_date_time -lboost_filesystem -lboost_regex -lopss

TARGET = $(TARGET_DIR)/AM_Order.o $(TARGET_DIR)/CHA_DestinationRouter.o	$(TARGET_DIR)/CHA_MailRouter.o $(TARGET_DIR)/CHA_PrinterTarget.o $(TARGET_DIR)/CHA_SpontSubscriber.o  $(TARGET_DIR)/cti.o $(TARGET_DIR)/AM_OrderStorage.o   $(TARGET_DIR)/CHA_DeviceModeProps.o $(TARGET_DIR)/CHA_MailTarget.o  $(TARGET_DIR)/CHA_PromptString.o  $(TARGET_DIR)/current.o $(TARGET_DIR)/AM_auxFunctions.o  $(TARGET_DIR)/CHA_ErrorReporter.o $(TARGET_DIR)/CHA_Model.o $(TARGET_DIR)/CHA_ReportIdentity.o $(TARGET_DIR)/AM_ttcbFunctions.o   $(TARGET_DIR)/CHA_EsList.o $(TARGET_DIR)/CHA_ModelClient.o $(TARGET_DIR)/CHA_ResponseBuffer.o 	  $(TARGET_DIR)/flags.o $(TARGET_DIR)/CHA_AddressList.o   $(TARGET_DIR)/CHA_ExecOrderInterval.o	$(TARGET_DIR)/CHA_NLSCatalog.o       $(TARGET_DIR)/CHA_ResponseFwdReceiver.o  $(TARGET_DIR)/CHA_CmdFileOrder.o     $(TARGET_DIR)/CHA_ExecOrderList.o	$(TARGET_DIR)/CHA_OZTInfo.o $(TARGET_DIR)/CHA_ResponseReceiver.o $(TARGET_DIR)/CHA_SysCmdFileOrder.o  $(TARGET_DIR)/intgrow.o $(TARGET_DIR)/CHA_CommandHistory.o   $(TARGET_DIR)/CHA_FileRouter.o $(TARGET_DIR)/CHA_Order.o $(TARGET_DIR)/CHA_RoutingCase.o $(TARGET_DIR)/CHA_UserInfo.o	  $(TARGET_DIR)/intheap.o $(TARGET_DIR)/CHA_CommandSender.o    $(TARGET_DIR)/CHA_FileTarget.o $(TARGET_DIR)/CHA_OrderList.o  $(TARGET_DIR)/CHA_RoutingHandler.o	   $(TARGET_DIR)/CHA_WindowRouter.o	  $(TARGET_DIR)/lock.o $(TARGET_DIR)/CHA_Connection.o  $(TARGET_DIR)/CHA_IPCSupervisor.o $(TARGET_DIR)/CHA_RoutingTarget.o	   $(TARGET_DIR)/CHA_WindowTarget.o	  $(TARGET_DIR)/queuenotail.o $(TARGET_DIR)/CHA_Converter.o        $(TARGET_DIR)/CHA_IgnoreCaseString.o	$(TARGET_DIR)/CHA_OztCmdFileOrder.o    $(TARGET_DIR)/CHA_Zone.o $(TARGET_DIR)/tas_tc_com_entry.o $(TARGET_DIR)/CHA_DelRespBuffer.o    $(TARGET_DIR)/CHA_ImmRespBuffer.o	$(TARGET_DIR)/CHA_Pipe.o $(TARGET_DIR)/CHA_SeqDelRespReceiver.o  $(TARGET_DIR)/KeyList.o $(TARGET_DIR)/tas_tc_string_array.o $(TARGET_DIR)/CHA_DelRespHandler.o   $(TARGET_DIR)/CHA_ImmRespReceiver.o $(TARGET_DIR)/CHA_PrinterList.o   $(TARGET_DIR)/CHA_SpDelReceiver.o  $(TARGET_DIR)/tas_tc_time_control.o $(TARGET_DIR)/CHA_DelRespReceiver.o  $(TARGET_DIR)/CHA_Interval.o $(TARGET_DIR)/CHA_PrinterPipe.o  $(TARGET_DIR)/CHA_SpontRepBuffer.o	 $(TARGET_DIR)/WinFIOLClient.o $(TARGET_DIR)/WinFIOLDriver.o $(TARGET_DIR)/tctrl_local.o  $(TARGET_DIR)/CHA_DelSubscriber.o $(TARGET_DIR)/CHA_LibGlobals.o $(TARGET_DIR)/CHA_PrinterRouter.o  $(TARGET_DIR)/CHA_SpontRepReceiver.o $(TARGET_DIR)/cegrow.o $(TARGET_DIR)/tctrl_remote.o $(PARSER_DIR)/CHA_FileLogger.o $(PARSER_DIR)/OPS_EventHandler.o $(PARSER_DIR)/OZT_Disk.o	$(PARSER_DIR)/OZT_IOW.o	$(PARSER_DIR)/OZT_Misc.o $(PARSER_DIR)/OZT_RunTimeNLS.o $(PARSER_DIR)/OZT_VarStore.o $(PARSER_DIR)/CHA_LogReturnCode.o $(PARSER_DIR)/OZT_CDFFile.o	$(PARSER_DIR)/OZT_ErrHandling.o $(PARSER_DIR)/OZT_IOWin.o $(PARSER_DIR)/OZT_Parser_ll.o $(PARSER_DIR)/OZT_SourceInfo.o $(PARSER_DIR)/OpsParserListenerImpl.o $(PARSER_DIR)/CHA_Logger.o $(PARSER_DIR)/OZT_ChildHandler.o $(PARSER_DIR)/OZT_EventHandler.o $(PARSER_DIR)/OZT_Indicator.o $(PARSER_DIR)/OZT_Parser_yy.o $(PARSER_DIR)/OZT_SourceKeeper.o $(PARSER_DIR)/OpsParserOrbHandler.o $(PARSER_DIR)/CHA_LoggerPipe.o $(PARSER_DIR)/OZT_Clock.o $(PARSER_DIR)/OZT_FileMgr.o $(PARSER_DIR)/OZT_InkeyWin.o $(PARSER_DIR)/OZT_Pipe.o $(PARSER_DIR)/OZT_SourceMgr.o $(PARSER_DIR)/RemoteFileImpl.o $(PARSER_DIR)/CHA_MailLogger.o $(PARSER_DIR)/OZT_CmdRspBuf.o $(PARSER_DIR)/OZT_FileSelector.o $(PARSER_DIR)/OZT_InputWin.o $(PARSER_DIR)/OZT_Prompt.o $(PARSER_DIR)/OZT_Time.o $(PARSER_DIR)/VariableWatcher.o $(PARSER_DIR)/CHA_PrinterLogger.o $(PARSER_DIR)/OZT_CmdSender.o $(PARSER_DIR)/OZT_FileViewer.o $(PARSER_DIR)/OZT_Interpreter.o $(PARSER_DIR)/OZT_RspCatcher.o $(PARSER_DIR)/OZT_TimeOrder.o $(PARSER_DIR)/OPSLogger.o $(PARSER_DIR)/OZT_CommentWinModel.o $(PARSER_DIR)/OZT_Flow.o $(PARSER_DIR)/OZT_Mail.o $(PARSER_DIR)/OZT_RspReceiver.o $(PARSER_DIR)/OZT_Value.o

# Flags passed to the preprocessor.
CPPFLAGS +=  -I$(GTEST_DIR)/include -I$(GMOCK_DIR)/include

# Flags passed to the C++ compiler.
#CXXFLAGS += -g -Wall -Wextra
CXXFLAGS += -g -D_RWCONFIG=12dgmsd -std=gnu++0x -m64 -W -pthread -Wno-long-long -Wall -msse3 -O0 -xc++ -c -DBOOST_LOG_DYN_LINK -D_REENTRANT -DTPF=400 -DTHREAD -DPTHREAD -DBITS64 -D_GNU_SOURCE

LDFLAGS += -m64 -lrt 
# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = gmock_test

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# All Google Mock headers. Note that all Google Test headers are
# included here too, as they are #included by Google Mock headers.
# Usually you shouldn't change this definition.	
#GMOCK_HEADERS = $(GMOCK_DIR)/include/gmock/*.h \
                $(GMOCK_DIR)/include/gmock/internal/*.h \
                $(GTEST_HEADERS)

GMOCK_HEADERS = $(GMOCK_DIR)/include/gmock/*.h \
                $(GMOCK_DIR)/include/gmock/internal/*.h     
# House-keeping build targets.

all : clean $(TESTS)

clean :
	rm -f $(TESTS) gmock.a gmock_main.a *.o *.log core.*

# Builds gmock.a and gmock_main.a.  These libraries contain both
# Google Mock and Google Test.  A test should link with either gmock.a
# or gmock_main.a, depending on whether it defines its own main()
# function.  It's fine if your test only uses features from Google
# Test (and not Google Mock).


# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)
GMOCK_SRCS_ = $(GMOCK_DIR)/src/*.cc $(GMOCK_HEADERS)

# For simplicity and to avoid depending on implementation details of
# Google Mock and Google Test, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Mock and
# Google Test compile fast and for ordinary users their source rarely
# changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) $(CXXFLAGS) \
            -c $(GTEST_DIR)/src/gtest-all.cc

gmock-all.o : $(GMOCK_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) $(CXXFLAGS) \
            -c $(GMOCK_DIR)/src/gmock-all.cc

gmock_main.o : $(GMOCK_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) -I$(GMOCK_DIR) $(CXXFLAGS) \
            -c $(USER_DIR)/gmock_main.cc

gmock.a : gmock-all.o gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gmock_main.a : gmock-all.o gtest-all.o gmock_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.
CHA_Connection_Test.o : $(USER_DIR)/CHA_Connection_Test.cc $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPS_PARSER) $(OPS_LIB) $(PP_INCLUDES) $(USER_DIR)/CHA_Connection_Test.cc

OZT_CommandSender_Test.o : $(USER_DIR)/OZT_CommandSender_Test.cc $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPS_PARSER) $(OPS_LIB) $(PP_INCLUDES) $(USER_DIR)/OZT_CommandSender_Test.cc

CHA_ImmRespReceiver_Test.o : $(USER_DIR)/CHA_ImmRespReceiver_Test.cc $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPS_PARSER) $(OPS_LIB) $(PP_INCLUDES) $(USER_DIR)/CHA_ImmRespReceiver_Test.cc

WinFIOLClient_Test.o : $(USER_DIR)/WinFIOLClient_Test.cc $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPS_PARSER) $(OPS_LIB) $(PP_INCLUDES) $(USER_DIR)/WinFIOLClient_Test.cc

OZT_RspReceiver_Test.o : $(USER_DIR)/OZT_RspReceiver_Test.cc $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPS_PARSER) $(OPS_LIB) $(PP_INCLUDES) $(USER_DIR)/OZT_RspReceiver_Test.cc

OZT_RspCatcher_Test.o : $(USER_DIR)/OZT_RspCatcher_Test.cc $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPS_PARSER) $(OPS_LIB) $(PP_INCLUDES) $(USER_DIR)/OZT_RspCatcher_Test.cc

OZT_CmdRspBuf_Test.o : $(USER_DIR)/OZT_CmdRspBuf_Test.cc $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPS_PARSER) $(OPS_LIB) $(PP_INCLUDES) $(USER_DIR)/OZT_CmdRspBuf_Test.cc

gmock_test : CHA_ImmRespReceiver_Test.o WinFIOLClient_Test.o CHA_Connection_Test.o OZT_CommandSender_Test.o OZT_RspReceiver_Test.o OZT_RspCatcher_Test.o OZT_CmdRspBuf_Test.o gmock_main.a
	$(CXX) $(CPPFLAGS) $(LDFLAGS) $(LKFLAGS) -lpthread $^ -o $@ $(TARGET) $(LIBS)
